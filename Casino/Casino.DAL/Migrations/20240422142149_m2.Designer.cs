// <auto-generated />
using System;
using Casino.DAL;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Casino.DAL.Migrations
{
    [DbContext(typeof(CasinoDbContext))]
    [Migration("20240422142149_m2")]
    partial class m2
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.18")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Casino.Model.Bandit", b =>
                {
                    b.Property<int>("BanditId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BanditId"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int>("GameId")
                        .HasColumnType("int");

                    b.Property<int>("Position1")
                        .HasColumnType("int");

                    b.Property<int>("Position2")
                        .HasColumnType("int");

                    b.Property<int>("Position3")
                        .HasColumnType("int");

                    b.HasKey("BanditId");

                    b.HasIndex("GameId");

                    b.ToTable("Bandits");
                });

            modelBuilder.Entity("Casino.Model.BlackJack", b =>
                {
                    b.Property<int>("BlackJackId")
                        .HasColumnType("int");

                    b.Property<int>("DealerHunt")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int>("GameId")
                        .HasColumnType("int");

                    b.Property<int>("UserHunt")
                        .HasColumnType("int");

                    b.HasKey("BlackJackId");

                    b.ToTable("BlackJacks");
                });

            modelBuilder.Entity("Casino.Model.Game", b =>
                {
                    b.Property<int>("GameId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("GameId"));

                    b.Property<int?>("BanditId")
                        .HasColumnType("int");

                    b.Property<int?>("BlackJackId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("MaxBet")
                        .HasColumnType("int");

                    b.Property<int>("MinBet")
                        .HasColumnType("int");

                    b.Property<int?>("ResultId")
                        .HasColumnType("int");

                    b.Property<int?>("RouletteId")
                        .HasColumnType("int");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.HasKey("GameId");

                    b.HasIndex("BanditId");

                    b.HasIndex("BlackJackId");

                    b.HasIndex("ResultId");

                    b.HasIndex("RouletteId");

                    b.ToTable("Games");
                });

            modelBuilder.Entity("Casino.Model.Result", b =>
                {
                    b.Property<int>("ResultId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ResultId"));

                    b.Property<int>("Amount")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("GameId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("ResultId");

                    b.HasIndex("GameId");

                    b.HasIndex("UserId");

                    b.ToTable("Results");
                });

            modelBuilder.Entity("Casino.Model.Roulette", b =>
                {
                    b.Property<int>("RouletteId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RouletteId"));

                    b.Property<int>("BetType")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int>("GameId")
                        .HasColumnType("int");

                    b.HasKey("RouletteId");

                    b.HasIndex("GameId");

                    b.ToTable("Roulettes");
                });

            modelBuilder.Entity("Casino.Model.Transactions", b =>
                {
                    b.Property<int>("TransactionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TransactionId"));

                    b.Property<double>("Amount")
                        .HasColumnType("float");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("TransactionId");

                    b.HasIndex("UserId");

                    b.ToTable("Transactions");
                });

            modelBuilder.Entity("Casino.Model.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserId"));

                    b.Property<int>("Credits")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Login")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("NickName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<int>("UserType")
                        .HasColumnType("int");

                    b.HasKey("UserId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Casino.Model.Bandit", b =>
                {
                    b.HasOne("Casino.Model.Game", "Game")
                        .WithMany()
                        .HasForeignKey("GameId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Game");
                });

            modelBuilder.Entity("Casino.Model.BlackJack", b =>
                {
                    b.HasOne("Casino.Model.Game", "Game")
                        .WithMany()
                        .HasForeignKey("BlackJackId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Game");
                });

            modelBuilder.Entity("Casino.Model.Game", b =>
                {
                    b.HasOne("Casino.Model.Bandit", "Bandit")
                        .WithMany()
                        .HasForeignKey("BanditId");

                    b.HasOne("Casino.Model.BlackJack", "BlackJack")
                        .WithMany()
                        .HasForeignKey("BlackJackId");

                    b.HasOne("Casino.Model.Result", "Result")
                        .WithMany()
                        .HasForeignKey("ResultId");

                    b.HasOne("Casino.Model.Roulette", "Roulette")
                        .WithMany()
                        .HasForeignKey("RouletteId");

                    b.Navigation("Bandit");

                    b.Navigation("BlackJack");

                    b.Navigation("Result");

                    b.Navigation("Roulette");
                });

            modelBuilder.Entity("Casino.Model.Result", b =>
                {
                    b.HasOne("Casino.Model.Game", "Game")
                        .WithMany()
                        .HasForeignKey("GameId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Casino.Model.User", "User")
                        .WithMany("Results")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Game");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Casino.Model.Roulette", b =>
                {
                    b.HasOne("Casino.Model.Game", "Game")
                        .WithMany()
                        .HasForeignKey("GameId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Game");
                });

            modelBuilder.Entity("Casino.Model.Transactions", b =>
                {
                    b.HasOne("Casino.Model.User", "User")
                        .WithMany("Transactions")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Casino.Model.User", b =>
                {
                    b.Navigation("Results");

                    b.Navigation("Transactions");
                });
#pragma warning restore 612, 618
        }
    }
}
